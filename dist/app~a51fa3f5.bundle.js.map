{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";8XACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAOC,EAAsDC,EAAAA,EAAAA,cAAvCC,EAAuCD,EAAAA,EAAAA,iBAArBE,EAAqBF,EAAAA,EAAAA,kBAEvDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QADwD,SAChDC,GACNA,EAASC,kBAAkBL,EAAmB,CAACM,QAAS,MACzD,IA2BH,QAxByB,CACjBC,SADiB,SACRC,GAAI,oGACZA,EADY,iEAKHP,EALG,uCAKQQ,IAAIT,EAAmBQ,IAL/B,4CAMlB,EACKE,aARiB,WAQF,iHACLT,EADK,uCACMU,OAAOX,IADb,4CAEpB,EACKY,SAXiB,SAWRC,GAAO,oGAEfA,EAAMC,eAAe,MAFN,iEAMNb,EANM,uCAMKc,IAAIf,EAAmBa,IAN5B,4CAOrB,EACKG,YAnBiB,SAmBLR,GAAI,iHACNP,EADM,8CACYD,EAAmBQ,IAD/B,4CAErB,gDCvBH,QAPqB,CACnBS,KAAM,GAAF,OAAKnB,EAAAA,EAAAA,SAAL,QACJoB,OAAQ,SAACC,GAAD,gBAAcrB,EAAAA,EAAAA,SAAd,oBAAyCqB,EAAzC,EACRC,OAAQ,SAACZ,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,kBAAoCU,EAApC,MACRa,WAAY,GAAF,OAAKvB,EAAAA,EAAAA,SAAL,8PCLZ,4wNAkCA,QAjCMwB,kMACJ,sGACyBC,MAAMC,EAAAA,MAD/B,cACQC,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaC,aAHtB,2HAMA,WAAoBT,GAApB,yFACyBI,MAAMC,EAAAA,OAAoBL,IADnD,cACQM,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaC,aAHtB,sIAMA,WAA8BpB,GAA9B,yFACyBe,MAAMC,EAAAA,OAAoBhB,IADnD,cACQiB,EADR,gBAE6BA,EAASC,OAFtC,cAEQC,EAFR,yBAGSA,EAAaE,YAHtB,gIAMA,WAAwBC,GAAxB,yFACyBP,MAAMC,EAAAA,WAAyB,CACpDO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KANzB,cACQL,EADR,gBAS6BA,EAASC,OATtC,cASQC,EATR,yBAUSA,EAAaS,iBAVtB,yJAnBId,mCCSN,QAXe,CACbe,SAAU,uCACVC,qBAAsB,oDACtBC,sBAAuB,qDACvBC,qBAAsB,oDACtBC,WAAY,eACZ5C,cAAe,WACfE,iBAAkB,EAClBC,kBAAmB,uDCDf0C,EAAM,WAAIC,GAAI,CAClBC,OAAQC,SAASC,cAAc,eAC/BC,OAAQF,SAASC,cAAc,SAC/BE,QAASH,SAASC,cAAc,WAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACL,IAEDF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,YAEL","sources":["webpack://resto-app/./src/scripts/data/favorite-resto.js","webpack://resto-app/./src/scripts/globals/api-endpoint.js","webpack://resto-app/./src/scripts/data/restaurants.js","webpack://resto-app/./src/scripts/globals/config.js","webpack://resto-app/./src/scripts/index.js"],"sourcesContent":["import {openDB} from 'idb';\nimport CONFIG from '../globals/config';\n\nconst {DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME} = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, {keyPath: 'id'});\n  },\n});\n\nconst FavoriteRestoIdb = {\n  async getResto(id) {\n    if (!id) {\n      return;\n    }\n\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllRestos() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putResto(resto) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!resto.hasOwnProperty('id')) {\n      return;\n    }\n    // eslint-disable-next-line consistent-return\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto);\n  },\n  async deleteResto(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\n\nexport default FavoriteRestoIdb;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  list: `${CONFIG.BASE_URL}list`,\n  search: (keyword)=>`${CONFIG.BASE_URL}search?q=${keyword}`,\n  detail: (id) => `${CONFIG.BASE_URL}detail/${id}?`,\n  sendReview: `${CONFIG.BASE_URL}review`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass Restaurants {\n  static async list() {\n    const response = await fetch(API_ENDPOINT.list);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async search(keyword) {\n    const response = await fetch(API_ENDPOINT.search(keyword));\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async detailRestaurant(id) {\n    const response = await fetch(API_ENDPOINT.detail(id));\n    const responseJson = await response.json();\n    return responseJson.restaurant;\n  }\n\n  static async sendReview(review) {\n    const response = await fetch(API_ENDPOINT.sendReview, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(review),\n    });\n\n    const responseJson = await response.json();\n    return responseJson.customerReviews;\n  }\n}\n\nexport default Restaurants;\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL_LARGE: 'https://restaurant-api.dicoding.dev/images/large/',\n  BASE_IMAGE_URL_MEDIUM: 'https://restaurant-api.dicoding.dev/images/medium/',\n  BASE_IMAGE_URL_SMALL: 'https://restaurant-api.dicoding.dev/images/small/',\n  CACHE_NAME: 'Resto-App-v1',\n  DATABASE_NAME: 'resto-db',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'restos',\n};\n\nexport default CONFIG;\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.scss';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport App from './view/app';\n// import swRegister from './utils/sw-register';\n\nconst app = new App({\n  button: document.querySelector('#menuButton'),\n  drawer: document.querySelector('#menu'),\n  content: document.querySelector('#main'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  // swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","id","get","getAllRestos","getAll","putResto","resto","hasOwnProperty","put","deleteResto","list","search","keyword","detail","sendReview","Restaurants","fetch","API_ENDPOINT","response","json","responseJson","restaurants","restaurant","review","method","headers","body","JSON","stringify","customerReviews","BASE_URL","BASE_IMAGE_URL_LARGE","BASE_IMAGE_URL_MEDIUM","BASE_IMAGE_URL_SMALL","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage"],"sourceRoot":""}